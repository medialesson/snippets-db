# Authenticates an existing user
# @name auth
POST https://localhost:5001/users/auth HTTP/1.1
Content-Type: application/json

# id: required if user has no email, optional
# email: optional
# password: non-optional

{
  "user": {
    "email": "jonathan@appleseed.com",
    "password": "<MySecretPassw0rd>"
  }
}

@auth_token = {{auth.response.body.$.user.tokens.token}}
@auth_id = {{auth.response.body.$.user.id}}

###

# Retrieves the details from the current user
# @name details
GET https://localhost:5001/user HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{auth_token}}

@details_id = {{details.response.body.$.user.id}}

###

# Edits the details of a user 
# @name edit
PUT https://localhost:50001 HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{auth_token}}

# email: has to be a valid email, optional
# displayName: optinal
# password: 12 characters min, 
#           upper/lowercase letter, 
#           number, special character,
#           optional 

{
  "user": {
    "email": "jonathan@birchseed.com",
    "displayName": "Jonathan Birchseed",
    "password": "<MySecretPassw0rd>"
  }
}

###

# Retrieves a user by its unique identifier
# @name details_by_id
GET https://localhost:5001/user/{{auth_id}} HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{auth_token}}

# id: non-optional, path

# For a detailed overview of the api specs 
# have a look at swagger whilst running the app
# at: https://localhost:5001/swagger